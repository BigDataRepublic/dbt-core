name: Performance Regression Tests
# Schedule triggers
on:
  # sampling is fast enough to run on every commit in PRs
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  RUNNER_CACHE_PATH: performance/runner/target/release/runner

jobs:
  latest-runner:
    name: Compare Performance Samples
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: "-D warnings"
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      # attempts to access a previously cached runner
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.RUNNER_CACHE_PATH }}
          key: ${{ runner.os }}-${{ hashFiles('performance/runner/Cargo.toml')}}-${{ hashFiles('performance/runner/src/*') }}

      - name: Fetch Rust Toolchain
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Add fmt
        if: steps.cache.outputs.cache-hit != 'true'
        run: rustup component add rustfmt

      - name: Cargo fmt
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path performance/runner/Cargo.toml --all -- --check

      - name: Test
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path performance/runner/Cargo.toml

      - name: Build (optimized)
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --manifest-path performance/runner/Cargo.toml
      # the cache action automatically caches this binary at the end of the job

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: "3.8"

      - name: Install dbt
        run: pip install -r dev-requirements.txt -r editable-requirements.txt

      - name: Install Hyperfine
        run: wget https://github.com/sharkdp/hyperfine/releases/download/v1.11.0/hyperfine_1.11.0_amd64.deb && sudo dpkg -i hyperfine_1.11.0_amd64.deb

      - name: Move Runner
        run: mv performance/runner/target/release/runner ./performance/app

      - name: Change Runner Permissions
        run: chmod +x ./performance/app

      # `${{ github.workspace }}` is used to pass the absolute path
      - name: Run Measurement
        run: mkdir tmp && ./app sample -b baselines -p projects -o tmp
        working-directory: ${{ github.workspace }}/performance/
